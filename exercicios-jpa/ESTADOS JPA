ESTADOS DO JPA/HIBERNATE:

TEMOS 4 ESTADOS:

TRANSIENT;
PERSISTENT;
DETACHED; (DESLIGADO)
REMOVED.

1) QUANDO DAMOS UM NEW NO OBJ (ex: Usuario u = new Usuario())E ESSE OBJ NAO TEM UMA LINHA
NO BD, ESSE OBJ ESTÁ NO ESTADO TRANSIENT! SE COMPILARMOS E NAO DERMOS O PERSIST, ESSE
OBJ IRÁ PRO GARBAGE COLLECTOR E SAI DO FLUXO!

2) UM OBJ PASSA DO ESTADO DE TRANSIENT PARA O ESTADO DE PERSISTENT, QUANDO EXECUTAMOS 
ESSE CODIGO:
	//JA DEMOS O NEW NO OBJ
	em.getTransction().begin();
	em.persist(obj);
	em.getTransaction().commit();
	
UM OBJ QUE ESTA NO ESTADO PERSISTENT, É MONITORADO CONSTANTEMENTE PELA ENTITYMANAGER.
QUANDO DAMOS O EM.CLOSE(), O GARBAGE IRÁ VARRER A CONEXAO E TODOS OS OBJ QUE ESTAO EM
CACHE LA EXISTENTE.

3) O ESTADO DETACHED É O OBJ QUE EXISTE NO BD, ELE JA FOI PERSISTENT, MAS, NO MOMENTO,
NENHUMA ENTITYMANAGER ESTÁ MONITORANDO ELE. COM ISSO, ELE É UM OBJ DESLIGADO(DETACHED)!
EX:

	ENTITYMANAGER EM = EMF.CREATEENTITYMANAGER();
	FORNECEDOR OBJ = NEW FORNECEDOR("SADIA");
	EM.GETTRANSACTION().BEGIN();
	EM.PERSIST(OBJ);
	EM.GETTRANSACTION().COMMIT();
	EM.CLOSE();
	
APÓS O CLOSE(), O OBJ SE ENCONTRA EM DESLIGADO (DETACHED). PROVANDO ISSO: 
EX:
	EM.CLOSE();
	
	EM = EMF.CREATEENTITYMANAGER();
	OBJ.SETNOME("SADIA NOVA");
	EM.GETTRANSACTION().BEGIN();
	EM.GETTRANSACTION().COMMIT();
	EM.CLOSE();
	
R: ELE NAO FEZ NADA, PQ COMO O FORNECEDOR OBJ ESTÁ DESLIGADO, ELE NAO EXISTE PARA A NOVA
ENTITYMANAGER.

SE COLOCARMOS NESSE MESMO CODIGO ACIMA, O CODIGO "EM.PERSIST(OBJ)". (NO MEIO ENTRE BEGIN
E COMMIT), IRÁ GERAR UMA EXCECAO CHAMADA: 

"DETACHED ENTITY PASSED TO PERSIST" (ENTIDADE DO ESTADO DETACHED PASSOU PARA O ESTADO 
PERSISTENTE) = DIZ QUE TO QUERENDO PERSISTIR UM OBJ NO ESTADO DESLIGADO! NAO PODE!
PARA SALVAR UM OBJ, TEM QUE ESTAR NO ESTADO TRANSIENTE! 
PARA ATUALIZAR OU REMOVER UM OBJ, TEM QUE ESTAR NO ESTADO PERSISTENTE! 

ENTAO, PARA MUDARMOS O ESTADO DO OBJ DE DETACHED PARA PERSISTENTE, DEVEMOS ESCREVER O
CODIGO "OBJ = EM.MERGE(OBJ)":

	EM.CLOSE();
	
	EM = EMF.CREATEENTITYMANAGER();
	OBJ.SETNOME("SADIA NOVA");
	EM.GETTRANSACTION().BEGIN();
	OBJ = EM.MERGE(OBJ); //O MERGE() SERVE PARA "LIGAR" O OBJ NOVAMENTE (ESTADO PERSIST) E VERIFICAR A ALTERACAO
	EM.GETTRANSACTION().COMMIT(); (IRÁ IDENTIFICAR A ALTERACAO QUE FIZEMOS E IRÁ ATUALIZAR) 
	EM.CLOSE();
	
4) PARA EXCLUIRMOS O REGISTRO: 
4.1) TEMOS QUE TIRAR ELE DO DETACHED E JOGAR NO PERSISTENT, USANDO O MERGE();
4.2) DEPOIS, DE ESTAR NO PERSISTENT, USAMOS O MET REMOVE() PARA JOGAR O OBJ NO ESTADO
REMOVED. 
EX:

	EM.CLOSE();
	
	EM = EMF.CREATEENTITYMANAGER();
	EM.GETTRANSACTION().BEGIN();
	OBJ = EM.MERGE(OBJ);
	EM.REMOVE(OBJ);
	EM.GETTRANSACTION().COMMIT(); 
	EM.CLOSE();

5) OUTRAS FORMAS DE COLOCARMOS O OBJ EM MODO PERSISTENTE:

5.1) USANDO O FIND():

	EM.CLOSE();
	
	EM = EMF.CREATEENTITYMANAGER();
	EM.GETTRANSACTION().BEGIN();
	OBJ = EM.FIND(FORNECEDOR.CLASS, 1); //COLOQUEI EM MODO PERSISTENTE
	EM.REMOVE(OBJ) //AI SIM POSSO EXCLUI-LO
	EM.GETTRANSACTION().COMMIT(); 
	EM.CLOSE();